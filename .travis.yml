language: python

python:
  - "3.7"

# quick hack to determine what tag is (improvements welcomed)
#     release: ^v(\d+|\.)*[^a-z]\d*$
# dev release: ^v(\d+|\.)*[a-z]\d*$

env:
  global:
    - CHANS_DEV="-c pyviz/label/dev"
    - CHANS_REL="-c pyviz"
    - LABELS_DEV="--label=dev"
    - LABELS_REL="--label=dev --label=main"
    - PKG_TEST_PYTHON="--test-python=py37 --test-python=py27"

stages:
  - test
  - name: conda_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: conda_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$
  - name: pip_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$

jobs:
  include:

  ########## DEVELOPER INSTALL ##########

  - &pip_default
    stage: test
    before_install: pip install pyctdev && doit ecosystem_setup
    install: doit develop_install -o cmd
    script: doit test_all

  ########## END-USER PACKAGES ##########

  - &pip_pkg_default
    <<: *pip_default
    stage: pip_dev_package
    env: PP=testpypi PPU=$TPYPIU PPP=$TPYPIP
    install:
      - doit package_build --test-group=build_examples $PKG_TEST_PYTHON --sdist-install-build-deps --sdist-run-tests
      - doit package_build --test-group=cmd_examples $PKG_TEST_PYTHON --sdist-install-build-deps --sdist-run-tests
    script: doit package_upload -u $PPU -p $PPP --pypi $PP

  - <<: *pip_pkg_default
    stage: pip_package
    env: PP=pypi PPU=$PYPIU PPP=$PYPIP

  - &conda_default
    stage: conda_dev_package
    env: PYCTDEV_ECOSYSTEM=conda CHANS=$CHANS_DEV LABELS=$LABELS_DEV
    before_install:
      - pip install pyctdev && doit miniconda_install && pip uninstall -y doit pyctdev
      - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
      - conda config --set always_yes True
      - conda install -c pyviz pyctdev && doit ecosystem_setup
    install:
      - doit package_build --recipe=core $PKG_TEST_PYTHON --test-group=build_examples $CHANS
      - doit package_build               $PKG_TEST_PYTHON --test-group=cmd_examples   $CHANS
    script:
      - doit package_upload --token=$CONDA_UPLOAD_TOKEN $LABELS --recipe=core
      - doit package_upload --token=$CONDA_UPLOAD_TOKEN $LABELS

  - <<: *conda_default
    stage: conda_package
    env: PYCTDEV_ECOSYSTEM=conda CHANS=$CHANS_REL LABELS=$LABELS_REL
